{"version":3,"sources":["components/Languages/Languages.module.css","components/Countries/Countries.module.css","components/Continents/Continents.module.css","api-service/Api-service.js","components/Languages/Languages.js","components/Countries/Countries.js","components/Continents/Continents.js","App.js","index.js"],"names":["module","exports","client","ApolloClient","cache","InMemoryCache","uri","LIST_CONTINENTS","gql","Languages","language","handleTogle","useContext","MyContext","className","s","list","href","link","name","onClick","Countries","country","location","languages","map","code","Continents","continent","countries","React","createContext","App","useState","count","setCount","setLocation","useQuery","data","loading","error","Provider","value","e","preventDefault","target","innerText","console","log","prevState","message","continents","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,KAAO,0B,mBCAxDD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,KAAO,0B,mBCAxDD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,gMCE5CC,EAAS,IAAIC,IAAa,CACrCC,MAAO,IAAIC,IACXC,IAAK,uCAMMC,EAAkBC,YAAH,4K,wBCKbC,MAZf,YAAkC,IAAbC,EAAY,EAAZA,SACVC,EAAgBC,qBAAWC,GAA3BF,YAEL,OACG,oBAAIG,UAAWC,IAAEC,KAAjB,SACG,oBAAGC,KAAK,IAAKH,UAAWC,IAAEG,KAAMC,KAAK,YAAYC,QAAWT,EAA5D,UAA2ED,EAA3E,U,iBCcGW,MAlBf,YAAiC,IAAZC,EAAW,EAAXA,QAClB,EAAkCV,qBAAWC,GAArCF,EAAR,EAAQA,YAAaY,EAArB,EAAqBA,SAElB,OACU,qBAAKT,UAAWC,IAAEC,KAAlB,UACE,oBAAGC,KAAK,IAAIH,UAAWC,IAAEG,KAAMC,KAAK,UAAUC,QAAWT,EAAzD,UAAwEW,EAAQH,KAAhF,QACA,6BACGG,EAAQH,OAAOI,EAASD,SAAUA,EAAQE,UAAUC,KAAI,SAAAf,GAAQ,OAC9D,cAAC,EAAD,CAA+BA,SAAUA,EAASS,MAAlCT,EAASgB,e,iBCWjCC,MAnBf,YAAoC,IAAdC,EAAa,EAAbA,UACnB,EAAkChB,qBAAWC,GAArCF,EAAR,EAAQA,YAAaY,EAArB,EAAqBA,SAElB,OACD,qBAAKT,UAAWC,IAAEC,KAAlB,UACO,mBAAGC,KAAK,IAAIH,UAAWC,IAAEG,KAAOC,KAAK,YAAYC,QAAST,EAA1D,SACIiB,EAAUT,OAEd,6BACGS,EAAUT,OAAOI,EAASK,WAAaA,EAAUC,UAAUJ,KAAI,SAAAH,GAAO,OAAI,cAAC,EAAD,CAA8BA,QAASA,GAAvBA,EAAQI,eCPnGb,EAAYiB,IAAMC,gBAEzB,SAASC,IAEd,MAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,CAACL,UAAU,GAAIN,QAAQ,KAAhE,mBAAOC,EAAP,KAAiBa,EAAjB,KAeA,EAAiCC,YAAS9B,EAAiB,CAAEL,WAArDoC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,MAMvB,OAEE,cAAC3B,EAAU4B,SAAX,CAAoBC,MAAO,CAAER,QAAOvB,YArBlB,SAACgC,GACnBA,EAAEC,iBACD,MAA4BD,EAAEE,OAAtB1B,EAAR,EAAQA,KAAM2B,EAAd,EAAcA,UAGf,GAFAC,QAAQC,IAAI7B,GACZgB,GAAS,SAAAD,GAAK,OAAKA,KACN,cAATf,EAEF,OADA4B,QAAQC,IAAI,UACLZ,EAAY,CAACR,UAAU,GAAIN,QAAQ,KAG5Cc,GAAY,SAAAa,GAAS,kCAAU1B,GAAV,kBAAqBJ,EAAO2B,QAWAvB,YAAjD,SACE,qBAAKT,UAAU,iBAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sEACCyB,GAAWC,EAAS,mBAAG1B,UAAU,SAAb,SAAuB0B,EAAQA,EAAMU,QAAU,eACjE,qBAAKpC,UAAU,gBAAf,SACL,6BACGwB,EAAKa,WAAW1B,KAAI,SAAAG,GAAS,OAAI,cAAC,EAAD,CAAiCA,UAAWA,GAA3BA,EAAUF,oB,MCpCvE0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.67108268.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Languages_list__3im5o\",\"link\":\"Languages_link__7j5c9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Countries_list__1S4Dy\",\"link\":\"Countries_link__3H8dD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Continents_list__3YWuu\",\"link\":\"Continents_link__3SjEO\"};","import {ApolloClient, InMemoryCache, gql} from '@apollo/client';\n\n// initialize a GraphQL client\nexport const client = new ApolloClient({\n  cache: new InMemoryCache(),\n  uri: 'https://countries.trevorblades.com'\n});\n\n// write a GraphQL query that asks for names and codes for all countries\n\n\nexport const LIST_CONTINENTS = gql`\n  {\n    continents{\n  code\n  name\n  countries {\n      name\n      code\n      languages {\n      code\n      name\n    }\n    }\n  }\n  }\n`;\n\n","import React, {useContext} from 'react';\nimport { MyContext } from '../../App.js'\nimport s from './Languages.module.css'\n\nfunction Languages({ language }) {\n   const { handleTogle } = useContext(MyContext)\n\n      return (\n         <li className={s.list}>\n            <a href=\"#\"  className={s.link} name=\"lastChild\" onClick ={ handleTogle} >{language} </a>\n            </li>\n\n      )\n\n}\n\nexport default Languages","import React, {useContext } from 'react';\nimport Languages from '../Languages'\nimport { MyContext } from '../../App.js'\nimport s from './Countries.module.css'\n\nfunction Countries({ country }) {\n   const { handleTogle, location } = useContext(MyContext)\n\n      return (\n                <li  className={s.list}>\n                  <a href=\"#\" className={s.link} name=\"country\" onClick ={ handleTogle} >{country.name}  </a>\n                  <ul>\n                    {country.name===location.country &&country.languages.map(language => (\n                       <Languages key={language.code} language={language.name}/>\n                    ))}\n             </ul>\n        </li>\n          \n      )\n   \n\n}\n\nexport default Countries","import React, { useContext } from 'react';\nimport Countreis from '../Countries'\nimport { MyContext } from '../../App.js'\nimport s from './Continents.module.css'\n\nfunction Continents({ continent }) {\n   const { handleTogle, location } = useContext(MyContext)\n\n      return (\n     <li  className={s.list}>\n            <a href=\"#\" className={s.link}  name=\"continent\" onClick={handleTogle} >\n               {continent.name}\n                </a>\n            <ul>\n              {continent.name===location.continent && continent.countries.map(country => <Countreis key={country.code} country={country}/>)}\n             </ul>\n         </li>\n      )\n         \n     \n   \n\n}\n\nexport default Continents","import React, {useState} from 'react';\nimport { useQuery } from '@apollo/client';\nimport './App.css'\nimport { client, LIST_CONTINENTS} from './api-service/Api-service.js'\n\nimport Continents from './components/Continents'\n\n export const MyContext = React.createContext();\n\nexport function App() {\n\n  const [count, setCount] = useState(false);\n  const [location, setLocation] = useState({continent:'', country:''});\n   \n  const handleTogle = (e) => {\n    e.preventDefault()\n     const { name, innerText } = e.target;\n    console.log(name);\n    setCount(count => !count)\n    if (name === \"lastChild\") {\n      console.log(\"Hello!\");\n      return setLocation({continent:'', country:''})\n      \n    }\n    setLocation(prevState => ({ ...location, [name]: innerText }))\n   }\n \n  const { data, loading, error } = useQuery(LIST_CONTINENTS, { client });\n \n\n\n  \n\n  return (\n  \n    <MyContext.Provider value={{ count, handleTogle, location }}>\n      <div className=\"main-container\">\n        <div className=\"container\">\n          <h1>The best guide all around the world!</h1>\n          {loading || error ? (<p className=\"loader\">{error ? error.message : 'Loading...'}</p>) :\n            (<nav className=\"nav-container\" >\n        <ul>\n          {data.continents.map(continent => <Continents key={continent.code} continent={continent} /> )}\n        </ul>\n      </nav>)\n          }\n      </div>\n      </div>\n      \n      \n      </MyContext.Provider >\n   \n   \n     \n  );\n}\nexport default App;\n\n\n//  {/* <select value={country} onChange={event => setCountry(event.target.value)}>\n//       {data.countries.map(country => (\n//         <option key={country.code} value={country.code}>\n//           {country.name} - {country.capital} - {country.currency}\n//         </option>\n//       ))}\n//     </select>\n//     <ol>\n//         {data.countries.map(country => {\n//           return (<li key={country.code}>\n//           {country.name} - {country.capital} - {country.currency}\n//         </li>)\n//       })}\n//       </ol> */}\n//       {/* <ol>\n//         {data.continents.map(continent => {\n//           console.log(continent.name);\n//           return (<select key={continent.code} >\n//             <option >{continent.name} </option>\n//             {continent.countries.map(country => (\n//               <option key={country.code} >\n//           {country.name} \n//         </option>)\n//           )}\n//         </select>)\n//       })}\n//       </ol> */}\n     ","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {App} from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}